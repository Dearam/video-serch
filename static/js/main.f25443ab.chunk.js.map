{"version":3,"sources":["logo.svg","components/Vsearch.js","api/youtube.js","components/VIdeoitem.js","components/Videolist.js","components/Videodetail.js","components/Videos.js","App.js","reportWebVitals.js","index.js"],"names":["Vsearch","state","term","onFormSubmit","event","preventDefault","props","className","onSubmit","this","type","value","onChange","setState","target","href","Component","axios","create","baseURL","params","part","maxResults","key","Videoitem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","Videolist","videos","renderedList","map","id","videoId","Videodetail","videoSrc","description","Videos","selectedVideo","onTermsubmit","a","response","youtube","get","q","data","items","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f25443ab.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport './VIdeoitem.css'\n\nexport class Vsearch extends Component {\n    state={ term: ''};\n\n    onFormSubmit= event =>{\n        event.preventDefault()\n\n        this.props.onFormSubmit(this.state.term);//passing the onSubmit state.term properties to onTermsubmit \n    }\n    \n    render() {\n        return (\n            <div className=\"ui_seg\">\n                <form className=\"ui_form\" onSubmit={this.onFormSubmit}>\n                        <h3>Video search</h3>\n                        <div className=\"search-box\">\n                        <input \n                            className=\"search-txt\"\n                            type=\"text\"\n                            value={this.state.term}\n                            onChange={(event)=>{this.setState({term: event.target.value})}}/>\n                        </div>\n                    <a href=\"https://www.linkedin.com/login\"><i className={'icon-lt large linkedin icon' } >RAMPRASATH_M_V</i></a>\n                    <a href=\"https://www.instagram.com/\"><i className={'icon-rt large instagram icon'}>_dearam_3</i></a>\n                </form>\n            </div>\n            \n        )\n    }\n}\n\nexport default Vsearch","import axios from 'axios';\n\nconst KEY = 'AIzaSyAwDmZakGzdDfgXhPtX5e6NIWyBqI6Y-lw'\n\nexport default axios.create({\n    baseURL: 'https://www.googleapis.com/youtube/v3',\n    params: {\n        part: 'snippet',\n        maxResults : 5,\n        key: KEY\n    }\n});\n\n","import React from 'react'\nimport './VIdeoitem.css'\n\nfunction Videoitem({ video ,onVideoSelect}) {\n    return (\n        <div  onClick={()=>onVideoSelect(video)} className=\"video-item item\"> {/*this is the selected item to home as onselectedvideo*/}\n            <img alt={video.snippet.title}  className=\"ui image\" src={video.snippet.thumbnails.medium.url}/>  {/* getting image of the particular video */}\n            <div className=\"content\">\n                <div className=\"header\">{video.snippet.title}</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Videoitem","import React from 'react'\nimport Videoitem from './VIdeoitem'\n\n\nfunction Videolist({videos,onVideoSelect}) {\n    //props.videos\n    const renderedList= videos.map(video=>{//getting all videos like for loop\n        return <Videoitem \n                    key={video.id.videoId}\n                    onVideoSelect={onVideoSelect} //this is getting an onClick event\n                    video={video}/>//this is a single video passed to videoitem\n    })\n    return (\n        //returnin all videos\n        <div className=\"ui relaxed divided list\">\n            {renderedList}\n        </div>\n    )\n}\n\nexport default Videolist","import React from 'react'\n\nfunction Videodetail({ video }) {//particular selected video\n    \n    if(!video){\n        return <div>Loading...</div>\n    }\n    const videoSrc= `https://www.youtube.com/embed/${video.id.videoId}`\n    return (\n        <div>\n            <div className=\"ui embed\">\n                <iframe title=\"video player\" src={videoSrc}/>\n            </div>\n            <div className=\"ui segment\">\n                    <h4>{video.snippet.title}</h4>\n                    <p>{video.snippet.description}</p>\n            </div>\n            \n        </div>\n    )\n}\nexport default Videodetail\n","import React, { Component, useState,useEffect} from 'react';\nimport Vsearch from './Vsearch'\nimport youtube from '../api/youtube';\nimport Videolist from './Videolist';\nimport Videodetail from './Videodetail';\nimport './VIdeoitem.css'\n\nclass Videos extends Component {\n\n    state ={videos: [] ,selectedVideo: null};//getting lot of videos as array type []\n\n    componentDidMount(){\n        this.onTermsubmit('Vijay deverkonda');\n    }\n\n    onTermsubmit =async term =>{\n        const response = youtube.get('/search',{\n            params:{\n                q: term //this is the searching term as q\n                \n            }\n        })\n        this.setState({\n                videos: (await response).data.items,\n                selectedVideo:(await response).data.items[0]\n            })//setting the all null array to founded videos\n    }\n\n    onVideoSelect = (video)=>{\n        this.setState({ selectedVideo: video})//selected video from video list\n    }\n    render() {\n        return (\n            <div className=\"ui-contain\">\n                <Vsearch onFormSubmit={this.onTermsubmit}/>\n                <div className=\"ui grid\">\n                    <div className=\"ui row\">\n                        <div className=\"eleven wide column\">\n                            <Videodetail video={this.state.selectedVideo}/> {/*for getting selectedVideo detail*/}\n                        </div>\n                        <div className=\"five wide column\">\n                            <Videolist \n                                onVideoSelect={this.onVideoSelect} //choosed video as selectedVideo this onclick function at videoitem\n                                videos={this.state.videos}   //{/* I have {this.state.videos.length} videos. */}\n                            />        \n                        </div>              \n                    </div>\n                </div>\n                </div>\n            \n        )\n    }\n}\n\nexport default Videos\n","import logo from './logo.svg';\nimport './App.css';\nimport Videos from './components/Videos'\n\nfunction App() {\n  return (\n    <Videos/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}